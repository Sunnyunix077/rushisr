variables:
  TERRA_IMAGE: artifactorycn.netcracker.com:17048/utils/terraform-openstack:1.4.6
  ANSI_IMAGE: artifactorycn.netcracker.com:17048/utils/ansible:6.6.0
  SECRET_TFVARS_FILE: $SECRET_TFVARS_FILE
  SECRET_KEY: $SECRET_KEY
  OS_PASSWORD: $OS_PASS
  ANSIBLE_HOST_KEY_CHECKING: 'false'
  PRIVATE_KEY: $PRIVATE_KEY
  
stages:
  - lint
  - deploy
  - configure
  - kolla_deploy
  - test
  - destroy

#lint_ansible:
#  stage: lint
#  tags:
#    - NETCRACKER
#  image: $ANSI_IMAGE
#  script:
#    - cd ansible
#    - ansible-lint --offline --exclude meta/ --exclude defaults/ site.yml

deploy:
  stage: deploy
  tags:
    - NETCRACKER
  image: $TERRA_IMAGE
  script:
    - echo "$OPENRC_FILE" > openrc.sh
    - chmod +x openrc.sh
    - echo "export OS_PASSWORD=$OS_PASS" >> openrc.sh
    - echo "export OS_CACERT=$(pwd)/zephyr02.crt" >> openrc.sh
    - source openrc.sh
    - cd terraform
    - echo "$SECRET_TFVARS_FILE" > .secret.tfvars
    - terraform init
    - terraform apply -var-file=".secret.tfvars" -auto-approve
    - terraform state pull > tfstate.json
#    - |
#      FIP=($(awk -F'[:,]' '/openstack_networking_floatingip_v2/ {getline; while(getline && !/}/) {if (/address/) {gsub(/[[:space:]]+/, "", $2); gsub(/"/, "", $2); print $2}}}' tfstate.json))
#      echo "FLOATING_IP=$FIP" >> ../terraform.env
  artifacts:
    paths:
      - terraform/tfstate.json
#      - terraform.env
      - ansible/inventory/hosts
      - /tmp/hosts

configure:
  stage: configure
  dependencies:
    - deploy
  tags:
    - NETCRACKER
  image: $ANSI_IMAGE
  variables:
    HOSTS_FILE_PATH: /tmp/hosts
  script:
    - cd ansible
#    - source ../terraform.env
#    - echo "my_host ansible_host=$FLOATING_IP" > inventory/hosts
    - cat inventory/hosts
    - ls -l /tmp/
    - mkdir -p $HOME/.ssh
    - echo "$PRIVATE_KEY" > $HOME/.ssh/id_rsa
    - chmod 600 $HOME/.ssh/id_rsa
    - sleep 60
    - ansible-playbook -i inventory/hosts site.yml

.kolla_deploy:
  stage: kolla_deploy
  dependencies:
    - deploy
  tags:
    - NETCRACKER
  image: $ANSI_IMAGE
  script:
    - cd ansible
    - cat inventory/hosts
    - FLOATING_IP=$(grep "\[labdpl\]" inventory/hosts -A 1 | tail -n 1)
    - mkdir -p $HOME/.ssh
    - echo "$PRIVATE_KEY" > $HOME/.ssh/id_rsa
    - chmod 600 $HOME/.ssh/id_rsa
    - ansible-playbook -i inventory/hosts kolla_deploy.yml -e "kolla_external_vip_address=$FLOATING_IP"

#test:
#  stage: test
#  tags:
#    - NETCRACKER
#  image: $TERRA_IMAGE
#  script:
#    - source terraform.env
#    - |
#      response_code=$(curl -s -o /dev/null -w "%{http_code}" http://$FLOATING_IP:8080)
#      if [ "$response_code" -eq 200 ]; then
#        echo "HTTP/200 response received"
#      else
#        echo "Error: Unexpected HTTP response $response_code"
#        exit 1
#      fi

#destroy:
#  stage: destroy
#  tags:
#    - NETCRACKER
#  image: $TERRA_IMAGE
#  script:
#    - echo "$OPENRC_FILE" > openrc.sh
#    - chmod +x openrc.sh
#    - echo "export OS_PASSWORD=$OS_PASS" >> openrc.sh
#    - echo "export OS_CACERT=$(pwd)/zephyr02.crt" >> openrc.sh
#    - source openrc.sh
#    - cd terraform
#    - echo "$SECRET_TFVARS_FILE" > .secret.tfvars
#    - terraform init
#    - terraform state push tfstate.json
#    - terraform destroy -var-file=".secret.tfvars" -auto-approve
