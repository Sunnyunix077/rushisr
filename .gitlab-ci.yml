variables:
  IMAGE: artifactorycn.netcracker.com:17048/ops_terraform:1.0

stages:
  - lint
  - deploy
  - configure
  - test
  - destroy

lint_ansible:
  stage: lint
  tags:
    - NETCRACKER
  image: $IMAGE
  script:
    - ansible-lint site.yml # Linting command for Demo 4 - ansible code

lint_terraform:
  stage: lint
  tags:
    - NETCRACKER
  image: $IMAGE
  script:
    - tflint # Linting command using tflint for Demo 3 - terraform code

deploy:
  stage: deploy
  tags:
    - NETCRACKER
  image: $IMAGE
  script:
    - terraform init # Initialize Terraform
    - terraform apply -auto-approve # Apply Demo 3 - terraform code to create VM
  artifacts:
    paths:
      - ./terraform/terraform.tfstate # Save tfstate as artifact

configure:
  stage: configure
  tags:
    - NETCRACKER
  image: $IMAGE
  script:
    - ansible-playbook site.yml # Configure VM using Demo 4 - ansible code

test:
  stage: test
  tags:
    - NETCRACKER
  image: $IMAGE
  script:
    - 'curl -I http://0.0.0.0:8080'

destroy:
  stage: destroy
  tags:
    - NETCRACKER
  image: $IMAGE
  script:
    - terraform init # Initialize Terraform
    - terraform destroy -auto-approve # Load tfstate from artifacts and destroy VM

dependencies:
  stage: destroy
  tags:
    - NETCRACKER
  script:
    - terraform init # Initialize Terraform
    - terraform workspace select default # Select the default workspace for tfstate loading
    - terraform state pull > ./terraform/terraform.tfstate # Load tfstate from artifacts for destruction
