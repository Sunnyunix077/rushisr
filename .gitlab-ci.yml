variables:
  IMAGE: artifactorycn.netcracker.com:17048/tfansible:1.0
  SECRET_TFVARS_FILE: "$SECRET_TFVARS_FILE"
  SECRET_KEY: "$SECRET_KEY"
  PUBLIC_KEY: "$PUBLIC_KEY"
  
#before_script:
#  - echo "$OPENRC_FILE" > openrc.sh
#  - source openrc.sh
#  - pwd
#  - ls -al
 
#  tags:
#    - NETCRACKER
stages:
  - lint
  - deploy
  - configure
  - test
  - destroy

#lint_terraform:
#  stage: lint
#  tags:
#    - NETCRACKER
#  image: $IMAGE
#  script:
#    - tflint <path_to_demo_3_terraform_code>

#lint_ansible:
#  stage: lint
#  tags:
#    - NETCRACKER
#  image: $IMAGE
#  script:
#    - ansible-lint <path_to_demo_4_ansible_code>

deploy:
  stage: deploy
  tags:
    - NETCRACKER
  image: $IMAGE
  script:
    - export OS_PASSWORD=$OS_PASSWORD
    - echo "$OPENRC_FILE" > openrc.sh
    - chmod +x openrc.sh
    - source openrc.sh
#    - echo "Environment variables:"
    - echo "$SECRET_TFVARS_FILE" | base64 -d > .secret.tfvars.enc
    - openssl enc -aes-256-cbc -d -in .secret.tfvars.enc -out .secret.tfvars -k "$SECRET_KEY" -pbkdf2
    - cd terraform
    - terraform init --plugin-dir /opt/.terraform/providers
#    - terraform plan --refresh-only -out=tfplan
    - terraform apply -var-file="../.secret.tfvars" -auto-approve 
    - terraform state pull > tfstate.json
  artifacts:
    paths:
      - tfstate.json

configure:
  stage: configure
  tags:
    - NETCRACKER
  image: $IMAGE
  script:
    - ansible-playbook <path_to_demo_4_ansible_code>

test:
  stage: test
  tags:
    - NETCRACKER
  image: $IMAGE
  script:
    - curl -I http://0.0.0.0:8080
    # Add additional tests if needed

destroy:
  stage: destroy
  tags:
    - NETCRACKER
  image: $IMAGE
  script:
    - terraform init
    - terraform state push tfstate.json
    - terraform destroy -auto-approve <path_to_demo_3_terraform_code>
